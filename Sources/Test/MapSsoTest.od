package com.pigeon3d

import objd.test._

@Test
class MapSsoTest extends TestCase {
    @Test
    def testFullPartialTile {
        val map = MapSso(vec2i(2, 3))
        assertTrue(map.isFull(vec2i(0, 2)))
        assertTrue(map.isFull(vec2i(1, 0)))
        assertTrue(map.isFull(vec2i(-1, 1)))

        assertFalse(map.isFull(vec2i(-1, 0)))
        assertTrue(map.isPartial(vec2i(-1, 0)))
        assertFalse(map.isFull(vec2i(-2, 1)))
        assertTrue(map.isPartial(vec2i(-2, 1)))

        assertFalse(map.isFull(vec2i(-3, 1)))
        assertFalse(map.isPartial(vec2i(-3, 1)))
    }

    @Test
    def testFullTiles {
        val map = MapSso(vec2i(2, 3))
        val exp = [(-1, 1), (0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 1)].chain.toSet
        val tiles = map.fullTiles.chain.map{v -> (v.x, v.y)}.toSet
        assertEquals(exp, tiles)
    }

    @Test
    def testPartialTiles {
        val map = MapSso(vec2i(2, 3))
        val exp = [(-2,1), (-1,0), (-1,2), (0,-1), (0,3), (1,-1), (1,3), (2,0), (2,2), (3,1)].chain.toSet
        val tiles = map.partialTiles.chain.map{v -> (v.x, v.y)}.toSet
        assertEquals(exp, tiles)
    }
}